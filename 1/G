#include <iostream>
#include <vector>

using namespace std;

int main (){
    ios_base::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    int n =0 ,p = 0, q = 0;
    cin >> n >> p >> q;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
        cin >> a[i];
    }
    int l = 0, r = 1e9;
    while (r - l > 1){
        int count_punch = (r + l) / 2, count_p_punch = count_punch;
        if (1ll * q * count_punch >= (long long)1e9) {
            r = count_punch;
            continue;
        }
        int damage = q * count_punch;
        for (int i = 0; i < n; ++i) {
            if (a[i] > damage) {
                if (p == q) {
                    count_p_punch = -1;
                    break;
                }
                if ((a[i] - damage) / (p - q) + ((a[i] - damage) % (p - q) > 0) > count_p_punch) {
                    count_p_punch = -1;
                    break;
                }
                count_p_punch -= (a[i] - damage) / (p - q) + ((a[i] - damage) % (p - q) > 0);
            }
        }
        if (count_p_punch < 0) {
            l = count_punch;
        } else {
            r = count_punch;
        }
    }
    cout << r;
    return 0;
}
